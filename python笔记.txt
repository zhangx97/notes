Python有五个标准的数据类型：
	Numbers（数字）
	String（字符串）
	List（列表）
	Tuple（元组）
	Dictionary（字典）

Python GUI 编程(Tkinter)




使用Condition对象可以在某些事件触发或者达到特定的条件后才处理数据
lock = threading.Condition()

线程锁


import threading
 
con = threading.Condition()
 
 
def job1():
    con.acquire()
    print("JOB1：床前明月光")
    con.notify()   # 唤醒正在等待(wait)的线程
 
    con.wait()   # 等待对方回应消息，使用wait阻塞线程，等待对方通过notify唤醒本线程
    print("JOB1：举头看明月")
    con.notify()  # 唤醒对方
 
    con.release()
 
 
def job2():
    con.acquire()
 
    con.wait()
    print("JOB2:疑似地上桑")
    con.notify()
    con.wait()
    print("JOB2:低头思故乡")
    con.notify()
 
    con.release()
 
 
def main():
    t1 = threading.Thread(target=job1)
    t2 = threading.Thread(target=job2)
 
    t2.start()   #此处注意顺序，先t2,否则双方都处于wait状态，程序卡死
    t1.start()
 
    t1.join()
    t2.join()
 
 
if __name__ == "__main__":
    main()






logger = logging.getLogger(name)  # 初始化日志对象，如不指定name则返回root对象。
logger.setLevel(logging.ERROR)  #设置日志等级为ERROR，NOTSET<DEBUG<INFO<WARNING<ERROR<CRITICAL

fh = logging.FileHandler(name)
fh.setLevel(logging.ERROR)
ch = logging.StreamHandler()
ch.setLevel(logging.ERROR)



Python中内置的日志模块logging用法详解https://cloud.tencent.com/developer/article/1587902




列表用[]标识
元祖用()标识，不可二次赋值，相当于只读列表。
list()方法用于将元祖转换为列表




























